<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="classc___node___network" kind="class" language="C++" prot="public">
    <compoundname>c_Node_Network</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classc___node___network_1ae75bfe4e3c1092fdcbe4bbe5a9f87d54" prot="public" static="no" mutable="no">
        <type><ref refid="classc___fractal___tree" kindref="compound">c_Fractal_Tree</ref></type>
        <definition>c_Fractal_Tree c_Node_Network::Nodes</definition>
        <argsstring></argsstring>
        <name>Nodes</name>
        <qualifiedname>c_Node_Network::Nodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Node_Network.h" line="8" column="16" bodyfile="include/NT4/c_Node_Network.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classc___node___network_1ad0a6431ac74b58ab8cf20fe079c57b3a" prot="public" static="no" mutable="no">
        <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
        <definition>c_Node* c_Node_Network::Root</definition>
        <argsstring></argsstring>
        <name>Root</name>
        <qualifiedname>c_Node_Network::Root</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Node_Network.h" line="11" column="8" bodyfile="include/NT4/c_Node_Network.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classc___node___network_1accca531caaf962ade3d15d533b911249" prot="public" static="no" mutable="no">
        <type><ref refid="classc___node" kindref="compound">c_Node</ref> **</type>
        <definition>c_Node** c_Node_Network::Current_Node</definition>
        <argsstring></argsstring>
        <name>Current_Node</name>
        <qualifiedname>c_Node_Network::Current_Node</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Node_Network.h" line="14" column="8" bodyfile="include/NT4/c_Node_Network.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classc___node___network_1a625b54b6b47b54c6eed52031fc8af207" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t c_Node_Network::Node_Count</definition>
        <argsstring></argsstring>
        <name>Node_Count</name>
        <qualifiedname>c_Node_Network::Node_Count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Node_Network.h" line="18" column="10" bodyfile="include/NT4/c_Node_Network.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classc___node___network_1a1b11fd3159f04a8a0646d1681a552e7d" prot="public" static="no" mutable="no">
        <type><ref refid="classc___fractal___tree" kindref="compound">c_Fractal_Tree</ref> **</type>
        <definition>c_Fractal_Tree** c_Node_Network::State_Nodes</definition>
        <argsstring></argsstring>
        <name>State_Nodes</name>
        <qualifiedname>c_Node_Network::State_Nodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Node_Network.h" line="23" column="16" bodyfile="include/NT4/c_Node_Network.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classc___node___network_1a84f02216b76c6dcfe724bc0b6d6f54d7" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int c_Node_Network::State_Node_Tree_Count</definition>
        <argsstring></argsstring>
        <name>State_Node_Tree_Count</name>
        <qualifiedname>c_Node_Network::State_Node_Tree_Count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Node_Network.h" line="24" column="5" bodyfile="include/NT4/c_Node_Network.h" bodystart="24" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classc___node___network_1a64f0687974e43f61efe3c33350f0bfe9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>c_Node_Network::c_Node_Network</definition>
        <argsstring>()</argsstring>
        <name>c_Node_Network</name>
        <qualifiedname>c_Node_Network::c_Node_Network</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Node_Network.h" line="27" column="1" bodyfile="include/NT4/c_Node_Network.h" bodystart="27" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classc___node___network_1a690157a470361c8f14a62b74ce0d98f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>c_Node_Network::~c_Node_Network</definition>
        <argsstring>()</argsstring>
        <name>~c_Node_Network</name>
        <qualifiedname>c_Node_Network::~c_Node_Network</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Node_Network.h" line="42" column="1" bodyfile="include/NT4/c_Node_Network.h" bodystart="42" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classc___node___network_1a1d996398cc927a44ba7a9200fb966a14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int c_Node_Network::register_New_Construct</definition>
        <argsstring>()</argsstring>
        <name>register_New_Construct</name>
        <qualifiedname>c_Node_Network::register_New_Construct</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Node_Network.h" line="66" column="5" bodyfile="include/NT4/c_Node_Network.h" bodystart="66" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classc___node___network_1aceaa67302ce4d7fb686040b3d71ea640" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
        <definition>c_Node * c_Node_Network::new_Node</definition>
        <argsstring>()</argsstring>
        <name>new_Node</name>
        <qualifiedname>c_Node_Network::new_Node</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Node_Network.h" line="108" column="8" bodyfile="include/NT4/c_Node_Network.h" bodystart="108" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classc___node___network_1adc565abd674de560cf9c1e0f6493c072" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
        <definition>c_Node * c_Node_Network::new_State_Node</definition>
        <argsstring>(int p_Construct, double p_State)</argsstring>
        <name>new_State_Node</name>
        <qualifiedname>c_Node_Network::new_State_Node</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Construct</declname>
        </param>
        <param>
          <type>double</type>
          <declname>p_State</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Node_Network.h" line="134" column="8" bodyfile="include/NT4/c_Node_Network.h" bodystart="134" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classc___node___network_1a867c32ef68f61a90d47c64aea5417bfe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Node_Network::assign_State_Node</definition>
        <argsstring>(int p_State_Tree, c_Node *p_Node, double p_State)</argsstring>
        <name>assign_State_Node</name>
        <qualifiedname>c_Node_Network::assign_State_Node</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_State_Tree</declname>
        </param>
        <param>
          <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
          <declname>p_Node</declname>
        </param>
        <param>
          <type>double</type>
          <declname>p_State</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Node_Network.h" line="152" column="6" bodyfile="include/NT4/c_Node_Network.h" bodystart="152" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classc___node___network_1aa7a5c687cdae99e9f24ab5a2e6c0aa17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Node_Network::create_Connections</definition>
        <argsstring>(c_Node *p_To, c_Node **p_From, int p_Count)</argsstring>
        <name>create_Connections</name>
        <qualifiedname>c_Node_Network::create_Connections</qualifiedname>
        <param>
          <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
          <declname>p_To</declname>
        </param>
        <param>
          <type><ref refid="classc___node" kindref="compound">c_Node</ref> **</type>
          <declname>p_From</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_Count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Node_Network.h" line="167" column="6" bodyfile="include/NT4/c_Node_Network.h" bodystart="167" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classc___node___network_1a099d1a1e90690c62aed769ade7ed0ee3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
        <definition>c_Node * c_Node_Network::does_Upper_Tier_Connection_Exist</definition>
        <argsstring>(c_Node **p_Legs, int p_Count)</argsstring>
        <name>does_Upper_Tier_Connection_Exist</name>
        <qualifiedname>c_Node_Network::does_Upper_Tier_Connection_Exist</qualifiedname>
        <param>
          <type><ref refid="classc___node" kindref="compound">c_Node</ref> **</type>
          <declname>p_Legs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_Count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Node_Network.h" line="178" column="8" bodyfile="include/NT4/c_Node_Network.h" bodystart="178" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classc___node___network_1a3f8f1876326cf10fb2239d630b88a0a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
        <definition>c_Node * c_Node_Network::get_Upper_Tier_Node</definition>
        <argsstring>(c_Node **p_Legs, int p_Count, int p_Type)</argsstring>
        <name>get_Upper_Tier_Node</name>
        <qualifiedname>c_Node_Network::get_Upper_Tier_Node</qualifiedname>
        <param>
          <type><ref refid="classc___node" kindref="compound">c_Node</ref> **</type>
          <declname>p_Legs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_Count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_Type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Node_Network.h" line="189" column="8" bodyfile="include/NT4/c_Node_Network.h" bodystart="189" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classc___node___network_1a680f15be6f02774d19c35b4bb72aafa5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
        <definition>c_Node * c_Node_Network::does_State_Node_Exist</definition>
        <argsstring>(int p_Index, uint64_t p_Data)</argsstring>
        <name>does_State_Node_Exist</name>
        <qualifiedname>c_Node_Network::does_State_Node_Exist</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Index</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>p_Data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Node_Network.h" line="226" column="8" bodyfile="include/NT4/c_Node_Network.h" bodystart="226" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classc___node___network_1a06fe978620de4ac36ef7ac83e8e37e66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
        <definition>c_Node * c_Node_Network::get_State_Node</definition>
        <argsstring>(int p_Index, uint64_t p_Data)</argsstring>
        <name>get_State_Node</name>
        <qualifiedname>c_Node_Network::get_State_Node</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Index</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>p_Data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Node_Network.h" line="238" column="8" bodyfile="include/NT4/c_Node_Network.h" bodystart="238" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classc___node___network_1a9f87c489f9bd1f36c345e35ebd69357b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
        <definition>c_Node * c_Node_Network::get_Node_Ref_By_NID</definition>
        <argsstring>(uint64_t p_NID)</argsstring>
        <name>get_Node_Ref_By_NID</name>
        <qualifiedname>c_Node_Network::get_Node_Ref_By_NID</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>p_NID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Node_Network.h" line="254" column="8" bodyfile="include/NT4/c_Node_Network.h" bodystart="254" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classc___node___network_1a60b464c790ee06b3be8a714de0cc619c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Node_Network::output_BP</definition>
        <argsstring>()</argsstring>
        <name>output_BP</name>
        <qualifiedname>c_Node_Network::output_BP</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Node_Network.h" line="268" column="6" bodyfile="include/NT4/c_Node_Network.h" bodystart="268" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classc___node___network_1ab208b050b5f682c061c374ec842b018f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Node_Network::output_Raw</definition>
        <argsstring>()</argsstring>
        <name>output_Raw</name>
        <qualifiedname>c_Node_Network::output_Raw</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Node_Network.h" line="283" column="6" bodyfile="include/NT4/c_Node_Network.h" bodystart="283" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="classc___node___network_1aa39b84afb0daa8a0be51a611c4c7e44d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Node_Network::output_BP_NID</definition>
        <argsstring>(uint64_t p_NID)</argsstring>
        <name>output_BP_NID</name>
        <qualifiedname>c_Node_Network::output_BP_NID</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>p_NID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Node_Network.h" line="297" column="6" bodyfile="include/NT4/c_Node_Network.h" bodystart="297" bodyend="308"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="3">
        <label>c_Fractal_Node</label>
        <link refid="classc___fractal___node"/>
        <childnode refid="4" relation="usage">
          <edgelabel>NAdd</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>c_Fractal_Tree</label>
        <link refid="classc___fractal___tree"/>
        <childnode refid="3" relation="usage">
          <edgelabel>Current</edgelabel>
          <edgelabel>Root</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>c_Node</label>
        <link refid="classc___node"/>
        <childnode refid="4" relation="usage">
          <edgelabel>Axons</edgelabel>
          <edgelabel>Dendrites</edgelabel>
          <edgelabel>Next</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>c_Node_Network</label>
        <link refid="classc___node___network"/>
        <childnode refid="2" relation="usage">
          <edgelabel>Nodes</edgelabel>
          <edgelabel>State_Nodes</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>Current_Node</edgelabel>
          <edgelabel>Root</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/NT4/c_Node_Network.h" line="2" column="1" bodyfile="include/NT4/c_Node_Network.h" bodystart="3" bodyend="311"/>
    <listofallmembers>
      <member refid="classc___node___network_1a867c32ef68f61a90d47c64aea5417bfe" prot="public" virt="non-virtual"><scope>c_Node_Network</scope><name>assign_State_Node</name></member>
      <member refid="classc___node___network_1a64f0687974e43f61efe3c33350f0bfe9" prot="public" virt="non-virtual"><scope>c_Node_Network</scope><name>c_Node_Network</name></member>
      <member refid="classc___node___network_1aa7a5c687cdae99e9f24ab5a2e6c0aa17" prot="public" virt="non-virtual"><scope>c_Node_Network</scope><name>create_Connections</name></member>
      <member refid="classc___node___network_1accca531caaf962ade3d15d533b911249" prot="public" virt="non-virtual"><scope>c_Node_Network</scope><name>Current_Node</name></member>
      <member refid="classc___node___network_1a680f15be6f02774d19c35b4bb72aafa5" prot="public" virt="non-virtual"><scope>c_Node_Network</scope><name>does_State_Node_Exist</name></member>
      <member refid="classc___node___network_1a099d1a1e90690c62aed769ade7ed0ee3" prot="public" virt="non-virtual"><scope>c_Node_Network</scope><name>does_Upper_Tier_Connection_Exist</name></member>
      <member refid="classc___node___network_1a9f87c489f9bd1f36c345e35ebd69357b" prot="public" virt="non-virtual"><scope>c_Node_Network</scope><name>get_Node_Ref_By_NID</name></member>
      <member refid="classc___node___network_1a06fe978620de4ac36ef7ac83e8e37e66" prot="public" virt="non-virtual"><scope>c_Node_Network</scope><name>get_State_Node</name></member>
      <member refid="classc___node___network_1a3f8f1876326cf10fb2239d630b88a0a9" prot="public" virt="non-virtual"><scope>c_Node_Network</scope><name>get_Upper_Tier_Node</name></member>
      <member refid="classc___node___network_1aceaa67302ce4d7fb686040b3d71ea640" prot="public" virt="non-virtual"><scope>c_Node_Network</scope><name>new_Node</name></member>
      <member refid="classc___node___network_1adc565abd674de560cf9c1e0f6493c072" prot="public" virt="non-virtual"><scope>c_Node_Network</scope><name>new_State_Node</name></member>
      <member refid="classc___node___network_1a625b54b6b47b54c6eed52031fc8af207" prot="public" virt="non-virtual"><scope>c_Node_Network</scope><name>Node_Count</name></member>
      <member refid="classc___node___network_1ae75bfe4e3c1092fdcbe4bbe5a9f87d54" prot="public" virt="non-virtual"><scope>c_Node_Network</scope><name>Nodes</name></member>
      <member refid="classc___node___network_1a60b464c790ee06b3be8a714de0cc619c" prot="public" virt="non-virtual"><scope>c_Node_Network</scope><name>output_BP</name></member>
      <member refid="classc___node___network_1aa39b84afb0daa8a0be51a611c4c7e44d" prot="public" virt="non-virtual"><scope>c_Node_Network</scope><name>output_BP_NID</name></member>
      <member refid="classc___node___network_1ab208b050b5f682c061c374ec842b018f" prot="public" virt="non-virtual"><scope>c_Node_Network</scope><name>output_Raw</name></member>
      <member refid="classc___node___network_1a1d996398cc927a44ba7a9200fb966a14" prot="public" virt="non-virtual"><scope>c_Node_Network</scope><name>register_New_Construct</name></member>
      <member refid="classc___node___network_1ad0a6431ac74b58ab8cf20fe079c57b3a" prot="public" virt="non-virtual"><scope>c_Node_Network</scope><name>Root</name></member>
      <member refid="classc___node___network_1a84f02216b76c6dcfe724bc0b6d6f54d7" prot="public" virt="non-virtual"><scope>c_Node_Network</scope><name>State_Node_Tree_Count</name></member>
      <member refid="classc___node___network_1a1b11fd3159f04a8a0646d1681a552e7d" prot="public" virt="non-virtual"><scope>c_Node_Network</scope><name>State_Nodes</name></member>
      <member refid="classc___node___network_1a690157a470361c8f14a62b74ce0d98f1" prot="public" virt="non-virtual"><scope>c_Node_Network</scope><name>~c_Node_Network</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
