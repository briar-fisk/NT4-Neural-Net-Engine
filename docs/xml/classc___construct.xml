<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="classc___construct" kind="class" language="C++" prot="public">
    <compoundname>c_Construct</compoundname>
    <includes refid="c___construct_8h" local="no">c_Construct.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classc___construct_1a332982eaec8c14cfe05afd25361d8c2f" prot="public" static="no" mutable="no">
        <type><ref refid="classc___node___network" kindref="compound">c_Node_Network</ref></type>
        <definition>c_Node_Network c_Construct::Nodes</definition>
        <argsstring></argsstring>
        <name>Nodes</name>
        <qualifiedname>c_Construct::Nodes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="19" column="16" bodyfile="include/NT4/c_Construct.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classc___construct_1a23bb5cc9c1046a433e339729bdb645a8" prot="public" static="no" mutable="no">
        <type>std::string *</type>
        <definition>std::string* c_Construct::Assembly_Names</definition>
        <argsstring></argsstring>
        <name>Assembly_Names</name>
        <qualifiedname>c_Construct::Assembly_Names</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="22" column="13" bodyfile="include/NT4/c_Construct.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classc___construct_1a9db0b4fc23dfe4177390e0523382d80e" prot="public" static="no" mutable="no">
        <type>std::string *</type>
        <definition>std::string* c_Construct::Assembly_Input_Files</definition>
        <argsstring></argsstring>
        <name>Assembly_Input_Files</name>
        <qualifiedname>c_Construct::Assembly_Input_Files</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="25" column="13" bodyfile="include/NT4/c_Construct.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classc___construct_1ad63306b04f47d901b273ad35e5f13361" prot="public" static="no" mutable="no">
        <type>std::string *</type>
        <definition>std::string* c_Construct::Assembly_Output_Files</definition>
        <argsstring></argsstring>
        <name>Assembly_Output_Files</name>
        <qualifiedname>c_Construct::Assembly_Output_Files</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="28" column="13" bodyfile="include/NT4/c_Construct.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classc___construct_1aa417d510d37c3cc41c4118084b3bf5cd" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int c_Construct::Assembly_Count</definition>
        <argsstring></argsstring>
        <name>Assembly_Count</name>
        <qualifiedname>c_Construct::Assembly_Count</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="31" column="5" bodyfile="include/NT4/c_Construct.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classc___construct_1a14fbbf8259e0c3b81499b1b73cdc63fe" prot="public" static="no" mutable="no">
        <type><ref refid="classc___base___c_a_n" kindref="compound">c_Base_CAN</ref> **</type>
        <definition>c_Base_CAN** c_Construct::CAN</definition>
        <argsstring></argsstring>
        <name>CAN</name>
        <qualifiedname>c_Construct::CAN</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="35" column="12" bodyfile="include/NT4/c_Construct.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classc___construct_1a790a069851ad565d36b554fc76076ac8" prot="public" static="no" mutable="no">
        <type>std::string *</type>
        <definition>std::string* c_Construct::CAN_Type</definition>
        <argsstring></argsstring>
        <name>CAN_Type</name>
        <qualifiedname>c_Construct::CAN_Type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="38" column="13" bodyfile="include/NT4/c_Construct.h" bodystart="38" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classc___construct_1a7a14801f7769e0e185509138df95b258" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>c_Construct::c_Construct</definition>
        <argsstring>()</argsstring>
        <name>c_Construct</name>
        <qualifiedname>c_Construct::c_Construct</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="40" column="1" bodyfile="include/NT4/c_Construct.h" bodystart="40" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1add6a1e5603263055644c3de7ebebde11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int c_Construct::add_Assembly</definition>
        <argsstring>(std::string p_Assembly_Name)</argsstring>
        <name>add_Assembly</name>
        <qualifiedname>c_Construct::add_Assembly</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>p_Assembly_Name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="51" column="5" bodyfile="include/NT4/c_Construct.h" bodystart="51" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1ad9dada342148caa20b8847f71f94ee99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
        <definition>c_Node * c_Construct::get_Node_Ref_By_NID</definition>
        <argsstring>(uint64_t p_NID)</argsstring>
        <name>get_Node_Ref_By_NID</name>
        <qualifiedname>c_Construct::get_Node_Ref_By_NID</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>p_NID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="130" column="8" bodyfile="include/NT4/c_Construct.h" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1ae78412728c8848c78f5faa3927396687" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::set_Type</definition>
        <argsstring>(c_Node *p_Node, uint8_t p_Type)</argsstring>
        <name>set_Type</name>
        <qualifiedname>c_Construct::set_Type</qualifiedname>
        <param>
          <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
          <declname>p_Node</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>p_Type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="161" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="161" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a75916d16acfea758b147b20ca7808c33" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::add_Axon_Index</definition>
        <argsstring>(c_Node *p_Node, c_Node *p_Axon, int p_Index)</argsstring>
        <name>add_Axon_Index</name>
        <qualifiedname>c_Construct::add_Axon_Index</qualifiedname>
        <param>
          <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
          <declname>p_Node</declname>
        </param>
        <param>
          <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
          <declname>p_Axon</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_Index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="172" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="172" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1ad5c5495f8c492a381438c789c540b6d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::set_Dendrites</definition>
        <argsstring>(c_Node *p_Node, int p_Count, c_Node **p_Dendrites)</argsstring>
        <name>set_Dendrites</name>
        <qualifiedname>c_Construct::set_Dendrites</qualifiedname>
        <param>
          <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
          <declname>p_Node</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_Count</declname>
        </param>
        <param>
          <type><ref refid="classc___node" kindref="compound">c_Node</ref> **</type>
          <declname>p_Dendrites</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="184" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="184" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a9d4bf6c23c60cadcb375ecd702057efd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
        <definition>c_Node * c_Construct::does_Upper_Tier_Connection_Exist</definition>
        <argsstring>(int p_Count, c_Node **p_Nodes)</argsstring>
        <name>does_Upper_Tier_Connection_Exist</name>
        <qualifiedname>c_Construct::does_Upper_Tier_Connection_Exist</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Count</declname>
        </param>
        <param>
          <type><ref refid="classc___node" kindref="compound">c_Node</ref> **</type>
          <declname>p_Nodes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="196" column="8" bodyfile="include/NT4/c_Construct.h" bodystart="196" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a65827ef23803ab31c2ae97566209a4f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool c_Construct::does_Lower_Connection_Exist</definition>
        <argsstring>(c_Node *p_Node, int p_Count, c_Node **p_Nodes)</argsstring>
        <name>does_Lower_Connection_Exist</name>
        <qualifiedname>c_Construct::does_Lower_Connection_Exist</qualifiedname>
        <param>
          <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
          <declname>p_Node</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_Count</declname>
        </param>
        <param>
          <type><ref refid="classc___node" kindref="compound">c_Node</ref> **</type>
          <declname>p_Nodes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="204" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="204" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a62293dd615e3e4ecd73b9d433589d845" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::bind_State</definition>
        <argsstring>(c_Node *p_Node, uint64_t p_State)</argsstring>
        <name>bind_State</name>
        <qualifiedname>c_Construct::bind_State</qualifiedname>
        <param>
          <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
          <declname>p_Node</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>p_State</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="217" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="217" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a02c539e05c1b2306d35c4ba6a54e34cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::bp_O</definition>
        <argsstring>(c_Node *p_Node)</argsstring>
        <name>bp_O</name>
        <qualifiedname>c_Construct::bp_O</qualifiedname>
        <param>
          <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
          <declname>p_Node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="229" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="229" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1ac2310a967715ab037e84955313d4f7d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::bp_Trace_O</definition>
        <argsstring>(c_Node *p_Node, c_Linked_List_Handler *p_LL)</argsstring>
        <name>bp_Trace_O</name>
        <qualifiedname>c_Construct::bp_Trace_O</qualifiedname>
        <param>
          <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
          <declname>p_Node</declname>
        </param>
        <param>
          <type><ref refid="classc___linked___list___handler" kindref="compound">c_Linked_List_Handler</ref> *</type>
          <declname>p_LL</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="241" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="241" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1ab172e78e0c101a14c24336f5aeff9f8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::output_Node_Raw</definition>
        <argsstring>(c_Node *p_Node)</argsstring>
        <name>output_Node_Raw</name>
        <qualifiedname>c_Construct::output_Node_Raw</qualifiedname>
        <param>
          <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
          <declname>p_Node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="253" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="253" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1abc5f45554d19b49107b988c157d1a484" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::output_Node_Char</definition>
        <argsstring>(c_Node *p_Node)</argsstring>
        <name>output_Node_Char</name>
        <qualifiedname>c_Construct::output_Node_Char</qualifiedname>
        <param>
          <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
          <declname>p_Node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="265" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="265" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a4f012aae3556df88a6387e29ced87ea3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int c_Construct::register_New_Construct</definition>
        <argsstring>()</argsstring>
        <name>register_New_Construct</name>
        <qualifiedname>c_Construct::register_New_Construct</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="285" column="5" bodyfile="include/NT4/c_Construct.h" bodystart="285" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a6cde3a9428417d58a569ebad05e50ed9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
        <definition>c_Node * c_Construct::new_Node</definition>
        <argsstring>()</argsstring>
        <name>new_Node</name>
        <qualifiedname>c_Construct::new_Node</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="294" column="8" bodyfile="include/NT4/c_Construct.h" bodystart="294" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1ad5096bb0e07823624b6e948fa8c678e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
        <definition>c_Node * c_Construct::new_State_Node</definition>
        <argsstring>(int p_Assembly, double p_State)</argsstring>
        <name>new_State_Node</name>
        <qualifiedname>c_Construct::new_State_Node</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <param>
          <type>double</type>
          <declname>p_State</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="303" column="8" bodyfile="include/NT4/c_Construct.h" bodystart="303" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a5d8611febc794ff9185703b2c3da7763" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::create_Connections</definition>
        <argsstring>(c_Node *p_To, int p_Count, c_Node **p_From)</argsstring>
        <name>create_Connections</name>
        <qualifiedname>c_Construct::create_Connections</qualifiedname>
        <param>
          <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
          <declname>p_To</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_Count</declname>
        </param>
        <param>
          <type><ref refid="classc___node" kindref="compound">c_Node</ref> **</type>
          <declname>p_From</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="312" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="312" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1afdee89f01e9c9a1e0060e7ff870b9943" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
        <definition>c_Node * c_Construct::does_Upper_Tier_Connection_Exist_Network</definition>
        <argsstring>(int p_Count, c_Node **p_Legs)</argsstring>
        <name>does_Upper_Tier_Connection_Exist_Network</name>
        <qualifiedname>c_Construct::does_Upper_Tier_Connection_Exist_Network</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Count</declname>
        </param>
        <param>
          <type><ref refid="classc___node" kindref="compound">c_Node</ref> **</type>
          <declname>p_Legs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="320" column="8" bodyfile="include/NT4/c_Construct.h" bodystart="320" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1aae1a3496eb950e8ae73765c6b90215cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
        <definition>c_Node * c_Construct::get_Upper_Tier_Node</definition>
        <argsstring>(int p_Count, c_Node **p_Legs)</argsstring>
        <name>get_Upper_Tier_Node</name>
        <qualifiedname>c_Construct::get_Upper_Tier_Node</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Count</declname>
        </param>
        <param>
          <type><ref refid="classc___node" kindref="compound">c_Node</ref> **</type>
          <declname>p_Legs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="328" column="8" bodyfile="include/NT4/c_Construct.h" bodystart="328" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a659d81986ab7711766daa5bf3b6185a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
        <definition>c_Node * c_Construct::does_State_Node_Exist</definition>
        <argsstring>(int p_Assembly, uint64_t p_State)</argsstring>
        <name>does_State_Node_Exist</name>
        <qualifiedname>c_Construct::does_State_Node_Exist</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>p_State</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="338" column="8" bodyfile="include/NT4/c_Construct.h" bodystart="338" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1acd79f30f72c3610706fba2aec2754bd2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
        <definition>c_Node * c_Construct::get_State_Node</definition>
        <argsstring>(int p_Assembly, uint64_t p_State)</argsstring>
        <name>get_State_Node</name>
        <qualifiedname>c_Construct::get_State_Node</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>p_State</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="346" column="8" bodyfile="include/NT4/c_Construct.h" bodystart="346" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a323c1c287ef20362d0f44ea10a820051" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::output_BP</definition>
        <argsstring>()</argsstring>
        <name>output_BP</name>
        <qualifiedname>c_Construct::output_BP</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="354" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="354" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a5b764bec6e7f716936c25c617208b250" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::output_BP_NID</definition>
        <argsstring>(int p_NID)</argsstring>
        <name>output_BP_NID</name>
        <qualifiedname>c_Construct::output_BP_NID</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_NID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="362" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="362" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1ade886a683faf904aa3999e5180eab761" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::output_Node_Network</definition>
        <argsstring>()</argsstring>
        <name>output_Node_Network</name>
        <qualifiedname>c_Construct::output_Node_Network</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="370" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="370" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a7fd8943d282f9ff2879c81854f6435f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::encode</definition>
        <argsstring>(int p_Assembly, int p_Depth=0, uint64_t *p_Input=NULL)</argsstring>
        <name>encode</name>
        <qualifiedname>c_Construct::encode</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_Depth</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>p_Input</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="385" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="385" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a069522c548cd131b484a17141a79f00a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::query</definition>
        <argsstring>(int p_Assembly, uint64_t *p_Input=NULL, int p_Depth=0, int p_Charging_Style=-1, int p_Leg=0, int *p_Legs=NULL)</argsstring>
        <name>query</name>
        <qualifiedname>c_Construct::query</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>p_Input</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>int</type>
          <declname>p_Depth</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>p_Charging_Style</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>p_Leg</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int *</type>
          <declname>p_Legs</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="395" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="395" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a821693a2b5fe12a021bfd26c015fd22e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::submit_Set</definition>
        <argsstring>(int p_Assembly, int p_Depth, uint64_t *p_Input)</argsstring>
        <name>submit_Set</name>
        <qualifiedname>c_Construct::submit_Set</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_Depth</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>p_Input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="403" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="403" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a7e9351e49ce5017d1b1eba2b31698e08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
        <definition>c_Node * c_Construct::get_Treetop</definition>
        <argsstring>(int p_Assembly)</argsstring>
        <name>get_Treetop</name>
        <qualifiedname>c_Construct::get_Treetop</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="413" column="8" bodyfile="include/NT4/c_Construct.h" bodystart="413" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a837337574b4d519746350303790de97b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t c_Construct::get_Treetop_NID</definition>
        <argsstring>(int p_Assembly)</argsstring>
        <name>get_Treetop_NID</name>
        <qualifiedname>c_Construct::get_Treetop_NID</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="421" column="10" bodyfile="include/NT4/c_Construct.h" bodystart="421" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1af346b5f2a12fe0072fae3ad10b90343e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t c_Construct::get_Treetop_NID_At_Given_Index</definition>
        <argsstring>(int p_Assembly, int p_Index)</argsstring>
        <name>get_Treetop_NID_At_Given_Index</name>
        <qualifiedname>c_Construct::get_Treetop_NID_At_Given_Index</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_Index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="433" column="10" bodyfile="include/NT4/c_Construct.h" bodystart="433" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a9de611765d531f505f3322179b474dbf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::gather_Given_Trace</definition>
        <argsstring>(int p_Assembly, uint64_t p_NID)</argsstring>
        <name>gather_Given_Trace</name>
        <qualifiedname>c_Construct::gather_Given_Trace</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>p_NID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="445" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="445" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a04157fee15c249e016c04229e1fcd005" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::gather_Given_Trace_uint</definition>
        <argsstring>(int p_Assembly, uint64_t p_NID)</argsstring>
        <name>gather_Given_Trace_uint</name>
        <qualifiedname>c_Construct::gather_Given_Trace_uint</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>p_NID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="455" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="455" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1af7a78c4b068881619ec3eefe5c4a4e90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::gather_All_Traces</definition>
        <argsstring>(int p_Assembly)</argsstring>
        <name>gather_All_Traces</name>
        <qualifiedname>c_Construct::gather_All_Traces</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="465" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="465" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1ad0ea7cf620c35c0c2cf4db0b1b80274a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::gather_All_Traces_uint</definition>
        <argsstring>(int p_Assembly)</argsstring>
        <name>gather_All_Traces_uint</name>
        <qualifiedname>c_Construct::gather_All_Traces_uint</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="475" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="475" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a85e1edbb0b60af93844a5ce65dea7049" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::reset_Input</definition>
        <argsstring>(int p_Assembly)</argsstring>
        <name>reset_Input</name>
        <qualifiedname>c_Construct::reset_Input</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="485" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="485" bodyend="488"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a00654447b2cac1713c19ef133a66f3c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::set_NNet</definition>
        <argsstring>(int p_Assembly, c_Node_Network *p_NNet)</argsstring>
        <name>set_NNet</name>
        <qualifiedname>c_Construct::set_NNet</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <param>
          <type><ref refid="classc___node___network" kindref="compound">c_Node_Network</ref> *</type>
          <declname>p_NNet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="494" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="494" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a529371e93777e43ea632af55810859e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::set_State_Nodes_Index</definition>
        <argsstring>(int p_Assembly, int p_Index)</argsstring>
        <name>set_State_Nodes_Index</name>
        <qualifiedname>c_Construct::set_State_Nodes_Index</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_Index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="502" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="502" bodyend="505"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a215bc9a1f4d8b480a81607f5e9e80209" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::set_Input</definition>
        <argsstring>(int p_Assembly, int p_Input_Depth, uint64_t *p_Input)</argsstring>
        <name>set_Input</name>
        <qualifiedname>c_Construct::set_Input</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_Input_Depth</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>p_Input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="511" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="511" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a45ce6db14aae2ae4b190792954b9ec81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::set_2D_Input</definition>
        <argsstring>(int p_Assembly, int p_X_Depth, int p_Y_Depth, uint64_t **p_Input)</argsstring>
        <name>set_2D_Input</name>
        <qualifiedname>c_Construct::set_2D_Input</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_X_Depth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_Y_Depth</declname>
        </param>
        <param>
          <type>uint64_t **</type>
          <declname>p_Input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="519" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="519" bodyend="522"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1ad5feccb2cc5e0bc75ac4aed0193ba17d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::set_3D_Input</definition>
        <argsstring>(int p_Assembly, int p_X_Depth, int p_Y_Depth, int p_Z_Depth, uint64_t ***p_Input)</argsstring>
        <name>set_3D_Input</name>
        <qualifiedname>c_Construct::set_3D_Input</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_X_Depth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_Y_Depth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_Z_Depth</declname>
        </param>
        <param>
          <type>uint64_t ***</type>
          <declname>p_Input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="527" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="527" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a08b8780287a791c9cad2ebef90e4051a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::set_Input_String</definition>
        <argsstring>(int p_Assembly, std::string p_Input)</argsstring>
        <name>set_Input_String</name>
        <qualifiedname>c_Construct::set_Input_String</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>p_Input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="535" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="535" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1acda17aed39bf9fe6c2e70090fcfb2408" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::output_Scaffold</definition>
        <argsstring>(int p_Assembly)</argsstring>
        <name>output_Scaffold</name>
        <qualifiedname>c_Construct::output_Scaffold</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="543" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="543" bodyend="546"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1aceae3b75e1c7e211ce144a245898d6f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::output_Input</definition>
        <argsstring>(int p_Assembly)</argsstring>
        <name>output_Input</name>
        <qualifiedname>c_Construct::output_Input</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="554" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="554" bodyend="557"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1ab28d7a390ed5c3fe8e58c564b7fab2c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::output_Input_uint</definition>
        <argsstring>(int p_Assembly)</argsstring>
        <name>output_Input_uint</name>
        <qualifiedname>c_Construct::output_Input_uint</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="565" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="565" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a8d23d4db83075b3e51707a360b928f58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::output_Output</definition>
        <argsstring>(int p_Assembly)</argsstring>
        <name>output_Output</name>
        <qualifiedname>c_Construct::output_Output</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="573" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="573" bodyend="576"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a9e1712eb8a71f046e3145b67e388ad6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::output_Output_uint</definition>
        <argsstring>(int p_Assembly)</argsstring>
        <name>output_Output_uint</name>
        <qualifiedname>c_Construct::output_Output_uint</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="581" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="581" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1ab5b618ceafb910cd00e862010eca6bb2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::output_Scaffold_Char</definition>
        <argsstring>(int p_Assembly)</argsstring>
        <name>output_Scaffold_Char</name>
        <qualifiedname>c_Construct::output_Scaffold_Char</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="589" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="589" bodyend="592"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a5a8c062fda52d91a2e8e084c15a9d2b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int c_Construct::register_Assembly</definition>
        <argsstring>(std::string p_Type, std::string p_Assembly_Name)</argsstring>
        <name>register_Assembly</name>
        <qualifiedname>c_Construct::register_Assembly</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>p_Type</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>p_Assembly_Name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="619" column="5" bodyfile="include/NT4/c_Construct.h" bodystart="619" bodyend="678"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a2c23de265899048cbc3d93ee1b128415" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int c_Construct::load_Input</definition>
        <argsstring>(int p_Assembly)</argsstring>
        <name>load_Input</name>
        <qualifiedname>c_Construct::load_Input</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="690" column="5" bodyfile="include/NT4/c_Construct.h" bodystart="690" bodyend="728"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a61d42e63a0c51cd38a970356fd1fe642" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int c_Construct::load_Input_uint</definition>
        <argsstring>(int p_Assembly)</argsstring>
        <name>load_Input_uint</name>
        <qualifiedname>c_Construct::load_Input_uint</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="731" column="5" bodyfile="include/NT4/c_Construct.h" bodystart="731" bodyend="781"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1acff1234f0ddc37fcdf98a9c0d003ccef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::set_Input</definition>
        <argsstring>(int p_Assembly, std::string p_Input)</argsstring>
        <name>set_Input</name>
        <qualifiedname>c_Construct::set_Input</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>p_Input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="788" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="788" bodyend="791"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a21eaad6d92f475ce0b51e327f3892beb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::set_Input_uint</definition>
        <argsstring>(int p_Assembly, int p_Depth, uint64_t *p_Input)</argsstring>
        <name>set_Input_uint</name>
        <qualifiedname>c_Construct::set_Input_uint</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_Depth</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>p_Input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="795" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="795" bodyend="798"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a03c2a9f95c7823e6f85a64127fb13650" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::gather_Given_Node</definition>
        <argsstring>(int p_Assembly, uint64_t p_NID)</argsstring>
        <name>gather_Given_Node</name>
        <qualifiedname>c_Construct::gather_Given_Node</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>p_NID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="810" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="810" bodyend="822"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a0ab87cd5986ecb040c0b0bfc7f871bd3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::gather_Given_Node_uint</definition>
        <argsstring>(int p_Assembly, uint64_t p_NID)</argsstring>
        <name>gather_Given_Node_uint</name>
        <qualifiedname>c_Construct::gather_Given_Node_uint</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>p_NID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="825" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="825" bodyend="837"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1ae09398816a66beda26f5eb8e179e2e42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::gather_All_Nodes</definition>
        <argsstring>(int p_Assembly)</argsstring>
        <name>gather_All_Nodes</name>
        <qualifiedname>c_Construct::gather_All_Nodes</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="842" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="842" bodyend="861"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a423ee90b98892ae07bdfeed68041105e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::gather_All_Nodes_uint</definition>
        <argsstring>(int p_Assembly)</argsstring>
        <name>gather_All_Nodes_uint</name>
        <qualifiedname>c_Construct::gather_All_Nodes_uint</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="865" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="865" bodyend="884"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a923cb23516bb895c085091bb5edee447" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::output_Trace_To_File</definition>
        <argsstring>(std::ofstream *p_SF, c_Trace *p_Trace, int p_Output_Type)</argsstring>
        <name>output_Trace_To_File</name>
        <qualifiedname>c_Construct::output_Trace_To_File</qualifiedname>
        <param>
          <type>std::ofstream *</type>
          <declname>p_SF</declname>
        </param>
        <param>
          <type><ref refid="classc___trace" kindref="compound">c_Trace</ref> *</type>
          <declname>p_Trace</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_Output_Type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="894" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="894" bodyend="939"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a3f15d11f6118f49d67cfd01975f43c95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::output_Output_To_File</definition>
        <argsstring>(int p_Assembly, int p_Output_Type=0)</argsstring>
        <name>output_Output_To_File</name>
        <qualifiedname>c_Construct::output_Output_To_File</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_Output_Type</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="944" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="944" bodyend="964"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a414c232ca29b470341a445ba6ed6d1a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::gather_Output</definition>
        <argsstring>(int p_Assembly)</argsstring>
        <name>gather_Output</name>
        <qualifiedname>c_Construct::gather_Output</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="968" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="968" bodyend="971"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1af870efb15a7eaffcfaac1836fe4afb78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::gather_Output_uint</definition>
        <argsstring>(int p_Assembly)</argsstring>
        <name>gather_Output_uint</name>
        <qualifiedname>c_Construct::gather_Output_uint</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="975" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="975" bodyend="978"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1af47ce563ab9fb8fe3e6fd1ba454d6d9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::write_Node_To_File</definition>
        <argsstring>(int p_Assembly, std::ofstream *p_SF, c_Node *p_Node, int p_Output_Type=0)</argsstring>
        <name>write_Node_To_File</name>
        <qualifiedname>c_Construct::write_Node_To_File</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <param>
          <type>std::ofstream *</type>
          <declname>p_SF</declname>
        </param>
        <param>
          <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
          <declname>p_Node</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_Output_Type</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="989" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="989" bodyend="1041"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1ab60e4474a13c6159f05eafe8511c4225" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::save_Node_To_File</definition>
        <argsstring>(std::ofstream *p_SF, c_Node *p_Node, int p_Output_Type=0)</argsstring>
        <name>save_Node_To_File</name>
        <qualifiedname>c_Construct::save_Node_To_File</qualifiedname>
        <param>
          <type>std::ofstream *</type>
          <declname>p_SF</declname>
        </param>
        <param>
          <type><ref refid="classc___node" kindref="compound">c_Node</ref> *</type>
          <declname>p_Node</declname>
        </param>
        <param>
          <type>int</type>
          <declname>p_Output_Type</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="1043" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="1043" bodyend="1082"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1ace5d7063d4f8d0fcea34dc91b17aea54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::save_Assemblies</definition>
        <argsstring>(std::ofstream *p_SF)</argsstring>
        <name>save_Assemblies</name>
        <qualifiedname>c_Construct::save_Assemblies</qualifiedname>
        <param>
          <type>std::ofstream *</type>
          <declname>p_SF</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="1084" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="1084" bodyend="1095"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1af0f792baa761ef3cde50becf08c060ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::save_Node_Network</definition>
        <argsstring>(std::ofstream *p_SF)</argsstring>
        <name>save_Node_Network</name>
        <qualifiedname>c_Construct::save_Node_Network</qualifiedname>
        <param>
          <type>std::ofstream *</type>
          <declname>p_SF</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="1098" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="1098" bodyend="1114"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1aa1a8ff6d741c44fa1fb903a38bf97b4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::save_State_Trees</definition>
        <argsstring>(std::ofstream *p_SF)</argsstring>
        <name>save_State_Trees</name>
        <qualifiedname>c_Construct::save_State_Trees</qualifiedname>
        <param>
          <type>std::ofstream *</type>
          <declname>p_SF</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="1116" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="1116" bodyend="1124"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a7a4ad83d3eda0dc3626ed9e74706ea51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::save</definition>
        <argsstring>(std::string p_FName)</argsstring>
        <name>save</name>
        <qualifiedname>c_Construct::save</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>p_FName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="1126" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="1126" bodyend="1140"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1ac86220f0aa80a5e4feb1196f548ad437" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::load_Assemblies</definition>
        <argsstring>(std::ifstream *p_SF)</argsstring>
        <name>load_Assemblies</name>
        <qualifiedname>c_Construct::load_Assemblies</qualifiedname>
        <param>
          <type>std::ifstream *</type>
          <declname>p_SF</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="1142" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="1142" bodyend="1160"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a405dbe55fdda91bf466689d389b187ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::load_Node</definition>
        <argsstring>(std::ifstream *p_SF)</argsstring>
        <name>load_Node</name>
        <qualifiedname>c_Construct::load_Node</qualifiedname>
        <param>
          <type>std::ifstream *</type>
          <declname>p_SF</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="1162" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="1162" bodyend="1165"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a7f5f4526a54057c553565ca5811823de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::load_Node_Network</definition>
        <argsstring>(std::ifstream *p_SF)</argsstring>
        <name>load_Node_Network</name>
        <qualifiedname>c_Construct::load_Node_Network</qualifiedname>
        <param>
          <type>std::ifstream *</type>
          <declname>p_SF</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="1167" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="1167" bodyend="1234"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a8a8c3b8603e500e55f31b49eb775b221" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::load_State_Trees</definition>
        <argsstring>(std::ifstream *p_SF)</argsstring>
        <name>load_State_Trees</name>
        <qualifiedname>c_Construct::load_State_Trees</qualifiedname>
        <param>
          <type>std::ifstream *</type>
          <declname>p_SF</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="1236" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="1236" bodyend="1266"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a583e20fc1f19e1c4fe4aeb526e0e67e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::load</definition>
        <argsstring>(std::string p_FName)</argsstring>
        <name>load</name>
        <qualifiedname>c_Construct::load</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>p_FName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="1268" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="1268" bodyend="1282"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a2007beb7b2a4399c74a3254ff3ac7de7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::gather_Treetop_Node</definition>
        <argsstring>(int p_Assembly)</argsstring>
        <name>gather_Treetop_Node</name>
        <qualifiedname>c_Construct::gather_Treetop_Node</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="1286" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="1286" bodyend="1298"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a2a9c2946badebf59f646233103dad1d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::gather_Treetop_Node_uint</definition>
        <argsstring>(int p_Assembly)</argsstring>
        <name>gather_Treetop_Node_uint</name>
        <qualifiedname>c_Construct::gather_Treetop_Node_uint</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="1302" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="1302" bodyend="1314"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a685be2b7fc51cd2ef40615057f8b3953" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::gather_Treetop_NID</definition>
        <argsstring>(int p_Assembly)</argsstring>
        <name>gather_Treetop_NID</name>
        <qualifiedname>c_Construct::gather_Treetop_NID</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="1318" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="1318" bodyend="1336"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a238f8153e9b891ca53152124acc02760" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void c_Construct::output_Assemblies</definition>
        <argsstring>()</argsstring>
        <name>output_Assemblies</name>
        <qualifiedname>c_Construct::output_Assemblies</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="1348" column="6" bodyfile="include/NT4/c_Construct.h" bodystart="1348" bodyend="1354"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a8a20fab111cb5c6699004465ba7ec3ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int c_Construct::clear_Output</definition>
        <argsstring>(int p_Assembly)</argsstring>
        <name>clear_Output</name>
        <qualifiedname>c_Construct::clear_Output</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="1369" column="5" bodyfile="include/NT4/c_Construct.h" bodystart="1369" bodyend="1381"/>
      </memberdef>
      <memberdef kind="function" id="classc___construct_1a0ec304bb7d789cc019a508fb352e7efe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int c_Construct::output_Newline</definition>
        <argsstring>(int p_Assembly)</argsstring>
        <name>output_Newline</name>
        <qualifiedname>c_Construct::output_Newline</qualifiedname>
        <param>
          <type>int</type>
          <declname>p_Assembly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/NT4/c_Construct.h" line="1385" column="5" bodyfile="include/NT4/c_Construct.h" bodystart="1385" bodyend="1397"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>This class encapsulates and manipulates the Neural Network Engine directly while providing a public interface. </para>
    </briefdescription>
    <detaileddescription>
<para>Inside the construct you&apos;ll find the raw C++. The interface brings highly granular control from the sub-classes to the surface. On this interface the other ones are built. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="8">
        <label>c_2D_IO_Set</label>
        <link refid="classc__2_d___i_o___set"/>
      </node>
      <node id="9">
        <label>c_3D_IO_Set</label>
        <link refid="classc__3_d___i_o___set"/>
      </node>
      <node id="6">
        <label>c_Base_CAN</label>
        <link refid="classc___base___c_a_n"/>
        <childnode refid="2" relation="usage">
          <edgelabel>NNet</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>Input</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>Input_2D</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>Input_3D</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>Output</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>c_Construct</label>
        <link refid="classc___construct"/>
        <childnode refid="2" relation="usage">
          <edgelabel>Nodes</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>CAN</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>c_Fractal_Node</label>
        <link refid="classc___fractal___node"/>
        <childnode refid="5" relation="usage">
          <edgelabel>NAdd</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>c_Fractal_Tree</label>
        <link refid="classc___fractal___tree"/>
        <childnode refid="4" relation="usage">
          <edgelabel>Current</edgelabel>
          <edgelabel>Root</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>c_IO_Set</label>
        <link refid="classc___i_o___set"/>
      </node>
      <node id="5">
        <label>c_Node</label>
        <link refid="classc___node"/>
        <childnode refid="5" relation="usage">
          <edgelabel>Axons</edgelabel>
          <edgelabel>Dendrites</edgelabel>
          <edgelabel>Next</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>c_Node_Network</label>
        <link refid="classc___node___network"/>
        <childnode refid="3" relation="usage">
          <edgelabel>Nodes</edgelabel>
          <edgelabel>State_Nodes</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>Current_Node</edgelabel>
          <edgelabel>Root</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>c_Trace</label>
        <link refid="classc___trace"/>
        <childnode refid="5" relation="usage">
          <edgelabel>Treetop</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/NT4/c_Construct.h" line="14" column="1" bodyfile="include/NT4/c_Construct.h" bodystart="15" bodyend="1399"/>
    <listofallmembers>
      <member refid="classc___construct_1add6a1e5603263055644c3de7ebebde11" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>add_Assembly</name></member>
      <member refid="classc___construct_1a75916d16acfea758b147b20ca7808c33" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>add_Axon_Index</name></member>
      <member refid="classc___construct_1aa417d510d37c3cc41c4118084b3bf5cd" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>Assembly_Count</name></member>
      <member refid="classc___construct_1a9db0b4fc23dfe4177390e0523382d80e" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>Assembly_Input_Files</name></member>
      <member refid="classc___construct_1a23bb5cc9c1046a433e339729bdb645a8" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>Assembly_Names</name></member>
      <member refid="classc___construct_1ad63306b04f47d901b273ad35e5f13361" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>Assembly_Output_Files</name></member>
      <member refid="classc___construct_1a62293dd615e3e4ecd73b9d433589d845" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>bind_State</name></member>
      <member refid="classc___construct_1a02c539e05c1b2306d35c4ba6a54e34cc" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>bp_O</name></member>
      <member refid="classc___construct_1ac2310a967715ab037e84955313d4f7d4" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>bp_Trace_O</name></member>
      <member refid="classc___construct_1a7a14801f7769e0e185509138df95b258" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>c_Construct</name></member>
      <member refid="classc___construct_1a14fbbf8259e0c3b81499b1b73cdc63fe" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>CAN</name></member>
      <member refid="classc___construct_1a790a069851ad565d36b554fc76076ac8" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>CAN_Type</name></member>
      <member refid="classc___construct_1a8a20fab111cb5c6699004465ba7ec3ee" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>clear_Output</name></member>
      <member refid="classc___construct_1a5d8611febc794ff9185703b2c3da7763" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>create_Connections</name></member>
      <member refid="classc___construct_1a65827ef23803ab31c2ae97566209a4f1" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>does_Lower_Connection_Exist</name></member>
      <member refid="classc___construct_1a659d81986ab7711766daa5bf3b6185a1" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>does_State_Node_Exist</name></member>
      <member refid="classc___construct_1a9d4bf6c23c60cadcb375ecd702057efd" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>does_Upper_Tier_Connection_Exist</name></member>
      <member refid="classc___construct_1afdee89f01e9c9a1e0060e7ff870b9943" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>does_Upper_Tier_Connection_Exist_Network</name></member>
      <member refid="classc___construct_1a7fd8943d282f9ff2879c81854f6435f4" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>encode</name></member>
      <member refid="classc___construct_1ae09398816a66beda26f5eb8e179e2e42" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>gather_All_Nodes</name></member>
      <member refid="classc___construct_1a423ee90b98892ae07bdfeed68041105e" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>gather_All_Nodes_uint</name></member>
      <member refid="classc___construct_1af7a78c4b068881619ec3eefe5c4a4e90" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>gather_All_Traces</name></member>
      <member refid="classc___construct_1ad0ea7cf620c35c0c2cf4db0b1b80274a" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>gather_All_Traces_uint</name></member>
      <member refid="classc___construct_1a03c2a9f95c7823e6f85a64127fb13650" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>gather_Given_Node</name></member>
      <member refid="classc___construct_1a0ab87cd5986ecb040c0b0bfc7f871bd3" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>gather_Given_Node_uint</name></member>
      <member refid="classc___construct_1a9de611765d531f505f3322179b474dbf" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>gather_Given_Trace</name></member>
      <member refid="classc___construct_1a04157fee15c249e016c04229e1fcd005" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>gather_Given_Trace_uint</name></member>
      <member refid="classc___construct_1a414c232ca29b470341a445ba6ed6d1a2" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>gather_Output</name></member>
      <member refid="classc___construct_1af870efb15a7eaffcfaac1836fe4afb78" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>gather_Output_uint</name></member>
      <member refid="classc___construct_1a685be2b7fc51cd2ef40615057f8b3953" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>gather_Treetop_NID</name></member>
      <member refid="classc___construct_1a2007beb7b2a4399c74a3254ff3ac7de7" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>gather_Treetop_Node</name></member>
      <member refid="classc___construct_1a2a9c2946badebf59f646233103dad1d9" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>gather_Treetop_Node_uint</name></member>
      <member refid="classc___construct_1ad9dada342148caa20b8847f71f94ee99" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>get_Node_Ref_By_NID</name></member>
      <member refid="classc___construct_1acd79f30f72c3610706fba2aec2754bd2" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>get_State_Node</name></member>
      <member refid="classc___construct_1a7e9351e49ce5017d1b1eba2b31698e08" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>get_Treetop</name></member>
      <member refid="classc___construct_1a837337574b4d519746350303790de97b" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>get_Treetop_NID</name></member>
      <member refid="classc___construct_1af346b5f2a12fe0072fae3ad10b90343e" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>get_Treetop_NID_At_Given_Index</name></member>
      <member refid="classc___construct_1aae1a3496eb950e8ae73765c6b90215cc" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>get_Upper_Tier_Node</name></member>
      <member refid="classc___construct_1a583e20fc1f19e1c4fe4aeb526e0e67e6" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>load</name></member>
      <member refid="classc___construct_1ac86220f0aa80a5e4feb1196f548ad437" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>load_Assemblies</name></member>
      <member refid="classc___construct_1a2c23de265899048cbc3d93ee1b128415" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>load_Input</name></member>
      <member refid="classc___construct_1a61d42e63a0c51cd38a970356fd1fe642" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>load_Input_uint</name></member>
      <member refid="classc___construct_1a405dbe55fdda91bf466689d389b187ce" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>load_Node</name></member>
      <member refid="classc___construct_1a7f5f4526a54057c553565ca5811823de" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>load_Node_Network</name></member>
      <member refid="classc___construct_1a8a8c3b8603e500e55f31b49eb775b221" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>load_State_Trees</name></member>
      <member refid="classc___construct_1a6cde3a9428417d58a569ebad05e50ed9" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>new_Node</name></member>
      <member refid="classc___construct_1ad5096bb0e07823624b6e948fa8c678e4" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>new_State_Node</name></member>
      <member refid="classc___construct_1a332982eaec8c14cfe05afd25361d8c2f" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>Nodes</name></member>
      <member refid="classc___construct_1a238f8153e9b891ca53152124acc02760" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>output_Assemblies</name></member>
      <member refid="classc___construct_1a323c1c287ef20362d0f44ea10a820051" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>output_BP</name></member>
      <member refid="classc___construct_1a5b764bec6e7f716936c25c617208b250" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>output_BP_NID</name></member>
      <member refid="classc___construct_1aceae3b75e1c7e211ce144a245898d6f9" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>output_Input</name></member>
      <member refid="classc___construct_1ab28d7a390ed5c3fe8e58c564b7fab2c9" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>output_Input_uint</name></member>
      <member refid="classc___construct_1a0ec304bb7d789cc019a508fb352e7efe" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>output_Newline</name></member>
      <member refid="classc___construct_1abc5f45554d19b49107b988c157d1a484" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>output_Node_Char</name></member>
      <member refid="classc___construct_1ade886a683faf904aa3999e5180eab761" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>output_Node_Network</name></member>
      <member refid="classc___construct_1ab172e78e0c101a14c24336f5aeff9f8d" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>output_Node_Raw</name></member>
      <member refid="classc___construct_1a8d23d4db83075b3e51707a360b928f58" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>output_Output</name></member>
      <member refid="classc___construct_1a3f15d11f6118f49d67cfd01975f43c95" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>output_Output_To_File</name></member>
      <member refid="classc___construct_1a9e1712eb8a71f046e3145b67e388ad6f" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>output_Output_uint</name></member>
      <member refid="classc___construct_1acda17aed39bf9fe6c2e70090fcfb2408" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>output_Scaffold</name></member>
      <member refid="classc___construct_1ab5b618ceafb910cd00e862010eca6bb2" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>output_Scaffold_Char</name></member>
      <member refid="classc___construct_1a923cb23516bb895c085091bb5edee447" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>output_Trace_To_File</name></member>
      <member refid="classc___construct_1a069522c548cd131b484a17141a79f00a" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>query</name></member>
      <member refid="classc___construct_1a5a8c062fda52d91a2e8e084c15a9d2b5" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>register_Assembly</name></member>
      <member refid="classc___construct_1a4f012aae3556df88a6387e29ced87ea3" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>register_New_Construct</name></member>
      <member refid="classc___construct_1a85e1edbb0b60af93844a5ce65dea7049" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>reset_Input</name></member>
      <member refid="classc___construct_1a7a4ad83d3eda0dc3626ed9e74706ea51" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>save</name></member>
      <member refid="classc___construct_1ace5d7063d4f8d0fcea34dc91b17aea54" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>save_Assemblies</name></member>
      <member refid="classc___construct_1af0f792baa761ef3cde50becf08c060ad" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>save_Node_Network</name></member>
      <member refid="classc___construct_1ab60e4474a13c6159f05eafe8511c4225" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>save_Node_To_File</name></member>
      <member refid="classc___construct_1aa1a8ff6d741c44fa1fb903a38bf97b4a" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>save_State_Trees</name></member>
      <member refid="classc___construct_1a45ce6db14aae2ae4b190792954b9ec81" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>set_2D_Input</name></member>
      <member refid="classc___construct_1ad5feccb2cc5e0bc75ac4aed0193ba17d" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>set_3D_Input</name></member>
      <member refid="classc___construct_1ad5c5495f8c492a381438c789c540b6d4" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>set_Dendrites</name></member>
      <member refid="classc___construct_1a215bc9a1f4d8b480a81607f5e9e80209" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>set_Input</name></member>
      <member refid="classc___construct_1acff1234f0ddc37fcdf98a9c0d003ccef" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>set_Input</name></member>
      <member refid="classc___construct_1a08b8780287a791c9cad2ebef90e4051a" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>set_Input_String</name></member>
      <member refid="classc___construct_1a21eaad6d92f475ce0b51e327f3892beb" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>set_Input_uint</name></member>
      <member refid="classc___construct_1a00654447b2cac1713c19ef133a66f3c7" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>set_NNet</name></member>
      <member refid="classc___construct_1a529371e93777e43ea632af55810859e0" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>set_State_Nodes_Index</name></member>
      <member refid="classc___construct_1ae78412728c8848c78f5faa3927396687" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>set_Type</name></member>
      <member refid="classc___construct_1a821693a2b5fe12a021bfd26c015fd22e" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>submit_Set</name></member>
      <member refid="classc___construct_1af47ce563ab9fb8fe3e6fd1ba454d6d9d" prot="public" virt="non-virtual"><scope>c_Construct</scope><name>write_Node_To_File</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
